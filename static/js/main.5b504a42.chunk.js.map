{"version":3,"sources":["services/utils/math.ts","services/utils/localStorage.ts","components/Button/index.tsx","components/BookCard/index.tsx","components/Link/index.tsx","components/Placeholder/index.tsx","components/BookList/index.tsx","components/SortControls/index.tsx","components/Spinner/index.tsx","services/api/index.ts","containters/Main/index.tsx","components/FormControls/TextInput/index.tsx","components/FormControls/AuthorCreatorRow/index.tsx","components/FormControls/AuthorCreator/index.tsx","components/FormControls/DatePicker/index.tsx","components/FormControls/ImageUploader/index.tsx","components/FormControls/NumberInput/index.tsx","components/BookForm/index.tsx","containters/MutateBook/index.tsx","routes/index.tsx","containters/App/index.tsx","index.tsx"],"names":["getRandomInt","min","max","Math","floor","random","getLocalStorageEntity","name","entity","localStorage","getItem","JSON","parse","setLocalStorageEntity","value","setItem","stringify","Button","type","children","template","onClick","disabled","className","BookCard","id","title","authors","onDelete","pagesCount","cover","renderedAuthors","map","author","to","firstName","lastName","src","alt","style","backgroundImage","Link","Placeholder","text","BookList","bookList","setBooks","handleDeleteBook","filteredBooks","filter","book","mappedBooks","length","SortControls","books","useState","currentSort","setCurrentSort","useEffect","storedSort","handleChangeSort","sortField","sortedBooks","sort","a","b","localeCompare","num1","publicationYear","Date","num2","getTime","Spinner","makeFakeAPICall","Promise","resolve","reject","timer","setTimeout","clearTimeout","getBooks","stored","Main","isLoading","setIsLoading","result","TextInput","labelText","onChange","placeholder","htmlFor","e","target","AuthorCreatorRow","currentName","setCurrentName","currentLastName","setCurrentLastName","trim","nanoid","AuthorCreator","currentAuthors","setCurrentAuthors","currentAuthor","setCurrentAuthor","handleBubbleState","handleDeleteAuthor","filteredAuthors","index","shouldDisabled","authorsToSave","DatePicker","onDayChange","classNames","container","overlayWrapper","overlay","ImageUploader","handleUpload","reader","FileReader","file","files","onloadend","blob","readAsDataURL","aria-label","NumberInput","step","inputMode","requiredFields","fallbackData","publisherName","undefined","releaseDate","isbn","BookForm","bookToMutate","editBookId","history","useHistory","storedBooks","setStoredBooks","formData","setFormData","isError","setIsError","handleFormData","field","prev","saveBooksToLocalStorage","booksToSave","push","error","el","currentField","Array","isArray","validateFormData","editBook","handleEdit","newBook","handleSubmit","MutateBook","match","params","Routes","path","exact","render","props","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b504a42.chunk.js","sourcesContent":["export const getRandomInt = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min)) + min;\n}","export const getLocalStorageEntity = (name: string) => {\n  const entity = localStorage.getItem(name);\n  return entity ? JSON.parse(entity) : null;\n}\n\nexport const setLocalStorageEntity = (name: string, value: any) => {\n  return localStorage.setItem(name, JSON.stringify(value));\n}","import React from \"react\";\nimport \"./index.scss\";\n\ninterface Props {\n  type?: \"button\" | \"submit\" | \"reset\" | undefined;\n  children?: JSX.Element | JSX.Element[] | String;\n  template?: string;\n  onClick?: (val: any) => void;\n  disabled?: boolean;\n}\n\nexport const Button: React.FC<Props> = ({\n  type = \"button\",\n  children,\n  template = \"default\",\n  onClick,\n  disabled = false,\n}) => {\n  return (\n    <button\n      className={`button button__${template}`}\n      type={type}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  );\n};\n","import React from \"react\";\nimport { Book } from \"../../types/book\";\nimport \"./index.scss\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"../Button\";\n\ninterface Props extends Book {\n  onDelete: (id: string) => void;\n}\n\nexport const BookCard: React.FC<Props> = ({\n  id,\n  title,\n  authors,\n  onDelete,\n  pagesCount,\n  cover = \"\",\n}) => {\n  const renderedAuthors = authors\n    ? authors.map((author) => (\n        <h3 key={author.id} className=\"book__author\">\n          <Link to={`/authors/${author.id}`}>\n            {author.firstName} {author.lastName}\n          </Link>\n        </h3>\n      ))\n    : null;\n\n  return (\n    <div className=\"book\">\n      <Link to={`/books/${id}`}>\n        <img\n          className=\"book__cover\"\n          src={cover || \"/icons/lost-items.svg\"}\n          alt={`Обложка книги ${title}`}\n        />\n      </Link>\n      <div className=\"book__authors\">{renderedAuthors}</div>\n      <h2 className=\"book__title\">\n        <Link to={`/books/${id}`}>{title}</Link>\n      </h2>\n      <Link to={`/edit/${id}`}>\n        <div\n          className=\"book__side-btn book__side-btn_edit\"\n          style={{\n            backgroundImage: `url('/icons/edit.svg')`,\n          }}\n        />\n      </Link>\n      <div\n        className=\"book__side-btn book__side-btn_delete\"\n        style={{\n          backgroundImage: `url('/icons/trash.svg')`,\n        }}\n      >\n        <Button onClick={() => onDelete(id as string)} />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport \"./index.scss\";\n\ninterface Props {\n  to: string;\n  children: JSX.Element | JSX.Element[] | String;\n  template?: string;\n}\n\nexport const Link: React.FC<Props> = ({\n  to,\n  children,\n  template = \"default\",\n}) => {\n  return (\n    <RouterLink to={to} className={`link link__${template}`}>\n      {children}\n    </RouterLink>\n  );\n};\n","import React from \"react\";\nimport \"./index.scss\";\n\ninterface Props {\n  text: string;\n}\n\nexport const Placeholder: React.FC<Props> = ({ text }) => {\n  return (\n    <div className=\"placeholder\">\n      <img src=\"/icons/lost-items.svg\" alt=\"Placeholder icon\" />\n      <p>{text}</p>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { setLocalStorageEntity } from \"../../services/utils\";\nimport { Books } from \"../../types/book\";\nimport { BookCard } from \"../BookCard\";\nimport { Link } from \"../Link\";\nimport { Placeholder } from \"../Placeholder\";\nimport \"./index.scss\";\n\ninterface Props {\n  bookList: Books;\n  setBooks: (val: Books) => void;\n}\n\nexport const BookList: React.FC<Props> = ({ bookList, setBooks }) => {\n  const handleDeleteBook = (id: string) => {\n    const filteredBooks = bookList.filter((book) => book.id !== id);\n    setLocalStorageEntity(\"storedBooks\", filteredBooks);\n    setBooks(filteredBooks);\n  };\n\n  const mappedBooks =\n    bookList.length > 0 ? (\n      bookList.map((book) => (\n        <BookCard key={book.id} onDelete={handleDeleteBook} {...book} />\n      ))\n    ) : (\n      <Placeholder text=\"The library is empty\" />\n    );\n\n  return (\n    <section className=\"book-list\">\n      <div className=\"book-list__wrapper\">{mappedBooks}</div>\n      <Link to=\"/add\" template=\"buttonLike\">\n        Add new book\n      </Link>\n    </section>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  getLocalStorageEntity,\n  setLocalStorageEntity,\n} from \"../../services/utils\";\nimport { Book, Books } from \"../../types\";\nimport { Button } from \"../Button\";\nimport \"./index.scss\";\n\ninterface Props {\n  books: Books;\n  setBooks: (b: Books) => void;\n}\n\nexport const SortControls: React.FC<Props> = ({ books, setBooks }) => {\n  const [currentSort, setCurrentSort] = useState(\"\");\n\n  useEffect(() => {\n    const storedSort = getLocalStorageEntity(\"currentSort\") || \"title\";\n    setCurrentSort(storedSort);\n  }, []);\n\n  const handleChangeSort = (sortField: string) => {\n    let sortedBooks = books;\n\n    if (sortField === \"title\") {\n      sortedBooks =\n        sortedBooks.length > 1\n          ? [...sortedBooks].sort((a, b) => a.title!.localeCompare(b.title!))\n          : sortedBooks;\n    } else {\n      sortedBooks =\n        sortedBooks.length > 1\n          ? [...sortedBooks].sort((a: Book, b: Book) => {\n              const num1 = a.publicationYear\n                ? new Date(a.publicationYear)\n                : new Date();\n              const num2 = b.publicationYear\n                ? new Date(b.publicationYear)\n                : new Date();\n              return num1.getTime() - num2.getTime();\n            })\n          : sortedBooks;\n    }\n\n    setBooks(sortedBooks);\n    setCurrentSort(sortField);\n    setLocalStorageEntity(\"currentSort\", sortField);\n    setLocalStorageEntity(\"storedBooks\", sortedBooks);\n  };\n\n  return (\n    <div className=\"sort\">\n      <p className=\"sort__label\">Sort by:</p>\n      <div className=\"sort__controls\">\n        <Button\n          template=\"sortButton\"\n          onClick={() => handleChangeSort(\"title\")}\n          disabled={currentSort === \"title\"}\n        >\n          Title\n        </Button>\n        <Button\n          template=\"sortButton\"\n          onClick={() => handleChangeSort(\"publicationYear\")}\n          disabled={currentSort === \"publicationYear\"}\n        >\n          Publication Year\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport './index.scss';\n\nexport const Spinner = () => {\n  return <div className=\"spinner\" />;\n};\n\n","import { getLocalStorageEntity } from '../utils';\n\n\nexport const makeFakeAPICall = async () => {\n  return new Promise((resolve, reject) => {\n    const timer:any = setTimeout(() => {\n      return resolve(clearTimeout(timer));\n    }, 1000)\n  })\n}\n\n\nexport const getBooks = async () => {\n  await makeFakeAPICall(); // Dummy колл симуляции запроса\n  const stored = getLocalStorageEntity(\"storedBooks\");\n  \n  return stored || [];\n}","import React, { useState, useEffect } from \"react\";\nimport { BookList } from \"../../components/BookList\";\nimport { SortControls } from \"../../components/SortControls\";\nimport { Spinner } from \"../../components/Spinner\";\nimport { getBooks } from \"../../services/api\";\nimport { Books } from \"../../types/book\";\nimport \"./index.scss\";\n\nexport const Main = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [books, setBooks] = useState<Books>([]);\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      const result = await getBooks(); // TODO useAsyncEffect\n      setBooks(result as Books);\n      setIsLoading(false);\n    })();\n  }, []);\n\n  return (\n    <div className=\"main\">\n      <div className=\"container\">\n        <h1 className=\"main__title\">Library</h1>\n        <SortControls books={books} setBooks={setBooks} />\n        {!isLoading ? (\n          <BookList bookList={books} setBooks={setBooks} />\n        ) : (\n          <Spinner />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ControlledComponent } from \"../../../types/controlledComponent\";\nimport \"./index.scss\";\n\ninterface Props extends ControlledComponent {\n  max: number;\n}\n\nexport const TextInput: React.FC<Props> = ({\n  labelText,\n  value,\n  onChange,\n  name,\n  placeholder,\n  disabled,\n  max,\n}) => {\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.value && e.target.value.length > max) {\n      return;\n    }\n\n    onChange(e.target.value, name);\n  };\n\n  return (\n    <div className=\"text-input\">\n      <label htmlFor={name}>{labelText}</label>\n      <input\n        type=\"text\"\n        name={name}\n        id={name}\n        value={value || \"\"}\n        onChange={handleChange}\n        placeholder={placeholder}\n        disabled={disabled}\n      />\n    </div>\n  );\n};\n","import { nanoid } from \"nanoid\";\nimport React, { useEffect, useState } from \"react\";\nimport { Author } from \"../../../types\";\nimport { Nullable } from \"../../../types/common\";\nimport { Button } from \"../../Button\";\nimport { TextInput } from \"../TextInput\";\nimport \"./index.scss\";\n\ninterface Props {\n  firstName?: Nullable<string>;\n  lastName?: Nullable<string>;\n  id?: string | number;\n  onChange: (author: Author) => void;\n  onDelete: (id: string) => void;\n  disabled: boolean;\n}\n\nexport const AuthorCreatorRow: React.FC<Props> = ({\n  firstName = null,\n  lastName = null,\n  id = null,\n  onChange,\n  onDelete,\n  disabled = false,\n}) => {\n  const [currentName, setCurrentName] = useState(firstName);\n  const [currentLastName, setCurrentLastName] = useState(lastName);\n\n  useEffect(() => {\n    if (currentName?.trim() && currentLastName?.trim()) {\n      const id = nanoid();\n      onChange({\n        id,\n        firstName: currentName,\n        lastName: currentLastName\n      });\n    }\n  }, [currentName, currentLastName]);\n\n\n  const handleDeleteAuthor = () => {\n    onDelete(id as string);\n  };\n\n  return (\n    <div className=\"author-creator-row\">\n      <div className=\"author-creator-row__column\">\n        <TextInput\n          labelText=\"First name\"\n          value={currentName}\n          name=\"firstName\"\n          onChange={setCurrentName}\n          disabled={disabled}\n          max={20}\n        />\n      </div>\n      <div className=\"author-creator-row__column\">\n        <TextInput\n          labelText=\"Last name\"\n          value={currentLastName}\n          name=\"lastName\"\n          onChange={setCurrentLastName}\n          disabled={disabled}\n          max={20}\n        />\n      </div>\n      {disabled ? (\n        <div className=\"author-creator-row__delete-icon\">\n          <Button onClick={handleDeleteAuthor} />\n        </div>\n      ) : null}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Author } from \"../../../types\";\nimport { Button } from \"../../Button\";\nimport { AuthorCreatorRow } from \"../AuthorCreatorRow\";\nimport \"./index.scss\";\n\ntype Props = {\n  authors: (Author | null)[];\n  onChange: (value: any, field: string) => void;\n  name: string;\n};\n\nexport const AuthorCreator: React.FC<Props> = ({ authors, name, onChange }) => {\n  const [currentAuthors, setCurrentAuthors] = useState<(Author | null)[]>([]);\n  const [currentAuthor, setCurrentAuthor] = useState(\n    authors[authors.length - 1]\n  );\n\n  useEffect(() => {\n    setCurrentAuthors([...authors, null]);\n  }, [authors]);\n\n  const handleBubbleState = (author: Author) => {\n    setCurrentAuthor(author);\n  };\n\n  const handleSaveAuthor = () => {\n    let authorsToSave = [...currentAuthors];\n    authorsToSave[authorsToSave.length - 1] = currentAuthor;\n    authorsToSave.filter((author) => author);\n\n    onChange(authorsToSave, \"authors\");\n  };\n\n  const handleDeleteAuthor = (id: string) => {\n    const filteredAuthors = authors.filter((author) => author!.id !== id);\n    onChange(filteredAuthors, \"authors\");\n  };\n\n  const renderedAuthors = currentAuthors\n    ? (currentAuthors as []).map((author: Author, index: number) => {\n        const shouldDisabled = author && author.firstName && author.lastName;\n\n        return (\n          <AuthorCreatorRow\n            key={(author && author.id) || index}\n            id={(author && author.id) || index}\n            firstName={author && author.firstName}\n            lastName={author && author.lastName}\n            onChange={handleBubbleState}\n            onDelete={handleDeleteAuthor}\n            disabled={!!shouldDisabled}\n          />\n        );\n      })\n    : null;\n\n  return (\n    <div className=\"author-creator\">\n      {renderedAuthors}\n      <div className=\"author-creator__add\">\n        <Button\n          disabled={\n            !!(\n              currentAuthor &&\n              (!currentAuthor.firstName?.trim() ||\n                !currentAuthor.lastName?.trim())\n            )\n          }\n          onClick={handleSaveAuthor}\n        >\n          Add author\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport \"./index.scss\";\nimport \"react-day-picker/lib/style.css\";\n\nconst min = new Date(\"1800-01-01\").getTime();\n\ninterface Props {\n  value: Date | undefined;\n  labelText: string;\n  onChange: (value: Date, field: string) => void;\n  name: string;\n}\n\nexport const DatePicker: React.FC<Props> = ({\n  value,\n  labelText,\n  onChange,\n  name,\n}) => {\n  const handleChangeDate = (value: any) => {\n\n    if (value) {\n      if (value.getTime() > min) {\n        return onChange(value, name);\n      }\n      return onChange(new Date(\"1800-01-01\"), name);\n    }\n  };\n  return (\n    <div className=\"day-picker\">\n      <label>{labelText}</label>\n      <DayPickerInput\n        onDayChange={handleChangeDate}\n        value={value}\n        classNames={{\n          container: \"day-picker__wrapper\",\n          overlayWrapper: \"\",\n          overlay: \"\",\n        }}\n      />\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { ControlledComponent } from \"../../../types/controlledComponent\";\nimport \"./index.scss\";\n\nexport const ImageUploader: React.FC<ControlledComponent> = ({\n  labelText,\n  value,\n  name,\n  onChange,\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleUpload = async (e: any) => {\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    setIsLoading(true);\n    reader.onloadend = async () => {\n      const blob = reader.result;\n      onChange(blob as string, name);\n      setIsLoading(false);\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  return (\n    <div className=\"image-uploader\">\n      <input\n        className=\"image-uploader__input\"\n        type=\"file\"\n        name={name}\n        onChange={handleUpload}\n        id={name}\n      />\n      <label\n        htmlFor={name}\n        className=\"image-uploader__label\"\n        aria-label={labelText}\n      >\n        {value && <img src={value as string} alt=\"Book cover preview\" />}\n      </label>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ControlledComponent } from \"../../../types/controlledComponent\";\n\ntype Props = {\n  min?: number;\n  max?: number;\n  step?: number;\n} & ControlledComponent;\n\nexport const NumberInput: React.FC<Props> = ({\n  name,\n  labelText,\n  value,\n  onChange,\n  placeholder,\n  min,\n  max,\n  step = 1,\n  disabled,\n}) => {\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onChange(e.target.value, name);\n  };\n\n  return (\n    <div>\n      <label htmlFor={name}>{labelText}</label>\n      <input\n        type=\"number\"\n        inputMode=\"numeric\"\n        min={min}\n        max={max}\n        step={step}\n        name={name}\n        id={name}\n        value={value || \"\"}\n        onChange={handleChange}\n        placeholder={placeholder}\n        disabled={disabled}\n      />\n    </div>\n  );\n};\n","import { nanoid } from \"nanoid\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  getLocalStorageEntity,\n  getRandomInt,\n  setLocalStorageEntity,\n} from \"../../services/utils\";\nimport { Book, Books } from \"../../types\";\nimport { Nullable } from \"../../types/common\";\nimport { Button } from \"../Button\";\nimport { AuthorCreator } from \"../FormControls/AuthorCreator\";\nimport { DatePicker } from \"../FormControls/DatePicker\";\nimport { ImageUploader } from \"../FormControls/ImageUploader\";\nimport { NumberInput } from \"../FormControls/NumberInput\";\nimport { TextInput } from \"../FormControls/TextInput\";\nimport \"./index.scss\";\n\nconst requiredFields = [\"title\", \"authors\", \"pagesCount\"];\n\nconst fallbackData: { [key: string]: Nullable<any> } = {\n  id: null,\n  title: null,\n  authors: [],\n  pagesCount: null,\n  publisherName: null,\n  publicationYear: undefined,\n  releaseDate: undefined,\n  isbn: null,\n  cover: null,\n};\n\ninterface Props {\n  bookToMutate?: {\n    id: string;\n    title: null;\n    authors: [\n      {\n        id: string;\n        firstName: null;\n        lastName: null;\n      }\n    ];\n    pagesCount: null;\n    publisherName: null;\n    publicationYear: undefined;\n    releaseDate: undefined;\n    isbn: null;\n    cover: null;\n  };\n  editBookId?: string;\n}\n\nexport const BookForm: React.FC<Props> = ({\n  bookToMutate,\n  editBookId = null,\n}) => {\n  const history = useHistory();\n  const [storedBooks, setStoredBooks] = useState<Books>([]);\n  const [formData, setFormData] = useState(bookToMutate || fallbackData);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    const stored = getLocalStorageEntity(\"storedBooks\");\n    setStoredBooks(stored || []);\n  }, []);\n\n  const handleFormData = (value: any, field: string) => {\n    setIsError(false);\n    setFormData((prev) => ({\n      ...prev,\n      [field]: value,\n    }));\n  };\n\n  const validateFormData = () => {\n    let error = false;\n\n    for (let el of requiredFields) {\n      const currentField = formData[el];\n      if (\n        !currentField ||\n        (Array.isArray(currentField) && currentField.length === 0)\n      ) {\n        error = true;\n        break;\n      }\n    }\n\n    setIsError(error);\n    return error;\n  };\n\n  const saveBooksToLocalStorage = (\n    booksToSave: { [key: string]: Nullable<any> }[]\n  ) => {\n    setLocalStorageEntity(\"storedBooks\", booksToSave);\n    history.push(\"/\");\n  };\n\n  const handleCalculateISBN = () => {\n    const str = `978-5-${getRandomInt(10, 1000)}-${getRandomInt(\n      100000,\n      200000\n    )}-${getRandomInt(0, 9)}`;\n    return str;\n  };\n\n  const handleSubmit = () => {\n    const newBook = {\n      ...formData,\n      id: nanoid(),\n      isbn: handleCalculateISBN(),\n    };\n    const booksToSave = [...storedBooks, newBook];\n\n    saveBooksToLocalStorage(booksToSave);\n  };\n\n  const handleEdit = () => {\n    const editBook = { ...formData };\n    const booksToSave = storedBooks.map((book) => {\n      if (book.id === editBookId) {\n        return {\n          ...editBook,\n        };\n      } else return book;\n    });\n\n    saveBooksToLocalStorage(booksToSave);\n  };\n\n  const handleFormAction = () => {\n    const error = validateFormData();\n\n    if (error) {\n      return;\n    }\n\n    if (editBookId) {\n      handleEdit();\n    } else {\n      handleSubmit();\n    }\n  };\n\n  return (\n    <section className=\"book-form\">\n      <div className=\"container\">\n        <h1>Add new book</h1>\n        <div className=\"book-form__wrapper\">\n          <div className=\"book-form__cover\">\n            <ImageUploader\n              labelText=\"Upload cover\"\n              value={formData.cover}\n              name=\"cover\"\n              onChange={handleFormData}\n            />\n          </div>\n          <div className=\"book-form__info\">\n            <TextInput\n              value={formData.title}\n              labelText=\"Title*\"\n              name=\"title\"\n              onChange={handleFormData}\n              max={30}\n            />\n            <TextInput\n              value={formData.publisherName}\n              labelText=\"Publisher Name\"\n              name=\"publisherName\"\n              onChange={handleFormData}\n              max={30}\n            />\n            <div className=\"book-form__authors\">\n              <span className=\"book-form__authors-title\">Authors*</span>\n              <AuthorCreator\n                authors={formData.authors}\n                name=\"authors\"\n                onChange={handleFormData}\n              />\n            </div>\n            <NumberInput\n              labelText=\"Pages count*\"\n              value={formData.pagesCount}\n              name=\"pagesCount\"\n              onChange={handleFormData}\n              min={1}\n              max={10000}\n            />\n            <DatePicker\n              labelText=\"Publication year\"\n              name=\"publicationYear\"\n              value={formData.publicationYear}\n              onChange={handleFormData}\n            />\n            <DatePicker\n              labelText=\"Release date\"\n              name=\"releaseDate\"\n              value={formData.releaseDate}\n              onChange={handleFormData}\n            />\n            {isError && (\n              <div className=\"book-form__error\">\n                One of the required fields(*) is empty\n              </div>\n            )}\n            <div className=\"book-form__submit\">\n              <Button onClick={handleFormAction} disabled={isError}>\n                Submit\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n","import React from \"react\";\nimport { BookForm } from \"../../components/BookForm\";\nimport { getLocalStorageEntity } from \"../../services/utils\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { Book } from \"../../types\";\n\ninterface Params {\n  id: string;\n}\n\ninterface Props extends RouteComponentProps<Params> {}\n\nexport const MutateBook: React.FC<Props> = ({ match }) => {\n  const id = match.params.id;\n  const storedBooks = getLocalStorageEntity(\"storedBooks\");\n  const bookToMutate =\n    storedBooks && storedBooks.length > 0\n      ? storedBooks.filter((book: Book) => book.id === id)[0]\n      : null;\n\n  return (\n    <div>\n      <BookForm bookToMutate={bookToMutate} editBookId={id} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Main } from \"../containters/Main\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { MutateBook } from \"../containters/MutateBook\";\n\nexport const Routes = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Main />\n        </Route>\n        <Route\n          path=\"/add\"\n          exact\n          render={(props) => <MutateBook {...props} />}\n        />\n        <Route\n          path=\"/edit/:id\"\n          exact\n          render={(props) => <MutateBook {...props} />}\n        />\n      </Switch>\n    </Router>\n  );\n};\n","import React from \"react\";\nimport { Routes } from \"../../routes\";\n\nexport const App = () => {\n  return (\n    <main>\n      <Routes />\n    </main>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./containters/App\";\nimport \"./index.scss\";\nimport \"./common/styles/input.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}